/*
 * Copyright 2009 NaoTeam Humboldt
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.naoth.xabsleditor;

import de.naoth.xabsleditor.editorpanel.XEditorPanel;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author thomas
 */
public class SearchInProjectDialog extends javax.swing.JDialog
{

  private Main parent;

  /** Creates new form SearchInProjectDialog */
  public SearchInProjectDialog(Main parent, boolean modal)
  {
    super(parent, modal);

    this.parent = parent;

    initComponents();
    resultList.setModel(new DefaultListModel());
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList();
        btSearch = new javax.swing.JButton();

        setTitle("Search in project");

        txtSearch.setToolTipText("Enter search term here");
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
        });

        resultList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultListMouseClicked(evt);
            }
        });
        resultList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resultListKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(resultList);

        btSearch.setMnemonic('S');
        btSearch.setText("Search");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void btSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btSearchActionPerformed
  {//GEN-HEADEREND:event_btSearchActionPerformed

    search();

  }//GEN-LAST:event_btSearchActionPerformed

  private void resultListMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_resultListMouseClicked
  {//GEN-HEADEREND:event_resultListMouseClicked

    if(evt.getClickCount() == 2)
    {
      openFile();
    }

  }//GEN-LAST:event_resultListMouseClicked

  private void txtSearchKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtSearchKeyPressed
  {//GEN-HEADEREND:event_txtSearchKeyPressed
    
    if(evt.getKeyCode() == KeyEvent.VK_ENTER)
    {
      search();
    }

  }//GEN-LAST:event_txtSearchKeyPressed

  private void resultListKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_resultListKeyPressed
  {//GEN-HEADEREND:event_resultListKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER)
    {
      openFile();
    }

  }//GEN-LAST:event_resultListKeyPressed

  private void openFile()
  {
    String path = (String) resultList.getModel().getElementAt(resultList.getSelectedIndex());
    XEditorPanel p = parent.openFile(new File(path));
    if(p != null)
    {
      p.search(txtSearch.getText());
    }
  }

  private void search()
  {
    DefaultListModel m = (DefaultListModel) resultList.getModel();

    m.removeAllElements();

    if(parent != null)
    {

      if(parent.getOptionPathMap() == null || parent.getOptionPathMap().values().size() == 0)
      {
        JOptionPane.showMessageDialog(null, "No option openend yet. You need to" +
          " open an option so I'm able to search in the project structure.",
          "WARNING", JOptionPane.WARNING_MESSAGE);
        return;
      }

      for(File f : parent.getOptionPathMap().values())
      {
        try
        {
          String content = Tools.readFileToString(f);
          if(content.indexOf(txtSearch.getText()) > -1)
          {
            m.addElement(f.getAbsolutePath());
          }
        }
        catch(IOException ex)
        {
          Tools.handleException(ex);
        }
      }//end for
    }//end if
  }//end search

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList resultList;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
